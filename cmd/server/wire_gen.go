// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/lmtani/learning-clean-architecture/internal/entity"
	"github.com/lmtani/learning-clean-architecture/internal/infra/database"
	"github.com/lmtani/learning-clean-architecture/internal/infra/database/psql"
	"github.com/lmtani/learning-clean-architecture/internal/infra/event"
	"github.com/lmtani/learning-clean-architecture/internal/infra/web"
	"github.com/lmtani/learning-clean-architecture/internal/usecase"
	"github.com/lmtani/learning-clean-architecture/pkg/events"
)

// Injectors from wire.go:

func NewWebOrderHandler(queries *psql.Queries, eventDispatcher events.EventDispatcherInterface) *web.OrderHandler {
	orderRepository := database.NewOrderRepository(queries)
	orderCreated := event.NewOrderCreated()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	listOrdersUseCase := usecase.NewListOrdersUseCase(orderRepository)
	orderHandler := web.NewOrderHandler(eventDispatcher, orderRepository, orderCreated, createOrderUseCase, listOrdersUseCase)
	return orderHandler
}

func NewCreateOrderUseCase(queries *psql.Queries, eventDispatcher events.EventDispatcherInterface) *usecase.CreateOrderUseCase {
	orderRepository := database.NewOrderRepository(queries)
	orderCreated := event.NewOrderCreated()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	return createOrderUseCase
}

func NewListOrdersUseCase(queries *psql.Queries) *usecase.ListOrdersUseCase {
	orderRepository := database.NewOrderRepository(queries)
	listOrdersUseCase := usecase.NewListOrdersUseCase(orderRepository)
	return listOrdersUseCase
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.OrderRepositoryInterface), new(*database.OrderRepository)))

var setOrderCreatedEvent = wire.NewSet(event.NewOrderCreated, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)))
